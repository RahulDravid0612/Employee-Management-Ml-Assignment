<export><workspace name="employee"><query name="Query 1" focus="false" listorder="1" taborder="1" active="true" database="15129843068917580124" server="6166986830366657121" database-name="employee" server-name="App-Services" mode="xquery" optimize="1">(:1.Create Document for each employee and add document to employee collection:)


xdmp:document-load("C:\mls-projects\Employee\EMP001.xml",
 &lt;options xmlns="xdmp:document-load"&gt;
 &lt;collections&gt;
 &lt;collection&gt;employee&lt;/collection&gt;
 &lt;/collections&gt;
 &lt;/options&gt;)
 
 xdmp:document-load("C:\mls-projects\Employee\EMP002.xml",
 &lt;options xmlns="xdmp:document-load"&gt;
 &lt;collections&gt;
 &lt;collection&gt;employee&lt;/collection&gt;
 &lt;/collections&gt;
 &lt;/options&gt;),
 
 xdmp:document-load("C:\mls-projects\Employee\EMP003.xml",
 &lt;options xmlns="xdmp:document-load"&gt;
 &lt;collections&gt;
 &lt;collection&gt;employee&lt;/collection&gt;
 &lt;/collections&gt;
 &lt;/options&gt;),
 
 xdmp:document-load("C:\mls-projects\Employee\EMP004.xml",
 &lt;options xmlns="xdmp:document-load"&gt;
 &lt;collections&gt;
 &lt;collection&gt;employee&lt;/collection&gt;
 &lt;/collections&gt;
 &lt;/options&gt;),
 
 xdmp:document-load("C:\mls-projects\Employee\EMP005.xml",
 &lt;options xmlns="xdmp:document-load"&gt;
 &lt;collections&gt;
 &lt;collection&gt;employee&lt;/collection&gt;
 &lt;/collections&gt;
 &lt;/options&gt;),
 
 xdmp:document-load("C:\mls-projects\Employee\EMP006.xml",
 &lt;options xmlns="xdmp:document-load"&gt;
 &lt;collections&gt;
 &lt;collection&gt;employee&lt;/collection&gt;
 &lt;/collections&gt;
 &lt;/options&gt;),
 
 xdmp:document-load("C:\mls-projects\Employee\EMP007.xml",
 &lt;options xmlns="xdmp:document-load"&gt;
 &lt;collections&gt;
 &lt;collection&gt;employee&lt;/collection&gt;
 &lt;/collections&gt;
 &lt;/options&gt;),
 
 xdmp:document-load("C:\mls-projects\Employee\EMP001.xml",
 &lt;options xmlns="xdmp:document-load"&gt;
 &lt;collections&gt;
 &lt;collection&gt;employee&lt;/collection&gt;
 &lt;/collections&gt;
 &lt;/options&gt;),
 
 xdmp:document-load("C:\mls-projects\Employee\EMP008.xml",
 &lt;options xmlns="xdmp:document-load"&gt;
 &lt;collections&gt;
 &lt;collection&gt;employee&lt;/collection&gt;
 &lt;/collections&gt;
 &lt;/options&gt;),
 
 xdmp:document-load("C:\mls-projects\Employee\EMP009.xml",
 &lt;options xmlns="xdmp:document-load"&gt;
 &lt;collections&gt;
 &lt;collection&gt;employee&lt;/collection&gt;
 &lt;/collections&gt;
 &lt;/options&gt;),
 
 xdmp:document-load("C:\mls-projects\Employee\EMP010.xml",
 &lt;options xmlns="xdmp:document-load"&gt;
 &lt;collections&gt;
 &lt;collection&gt;employee&lt;/collection&gt;
 &lt;/collections&gt;
 &lt;/options&gt;),

xdmp:document-load("C:\mls-projects\Employee\EMP011.xml",
 &lt;options xmlns="xdmp:document-load"&gt;
 &lt;collections&gt;
 &lt;collection&gt;employee&lt;/collection&gt;
 &lt;/collections&gt;
 &lt;/options&gt;),
 
 xdmp:document-load("C:\mls-projects\Employee\EMP012.xml",
 &lt;options xmlns="xdmp:document-load"&gt;
 &lt;collections&gt;
 &lt;collection&gt;employee&lt;/collection&gt;
 &lt;/collections&gt;
 &lt;/options&gt;)
</query><query name="Query 2" focus="false" listorder="2" taborder="2" active="true" database="15129843068917580124" server="6166986830366657121" database-name="employee" server-name="App-Services" mode="xquery" optimize="1">(:2.Get the employee id grouping By Salary into following format :)


xquery version "1.0-ml";
&lt;result&gt;{
for $salary in distinct-values(collection("employee")/employee/salary)
let $employee := collection("employee")/employee
return  &lt;object&gt; 
&lt;salary&gt;{$salary}&lt;/salary&gt;
   {
     for $i in $employee
     where $i/salary eq $salary
     order by $i
     return $i/empId
   }
  &lt;/object&gt;
  }&lt;/result&gt;
  
 
  </query><query name="Query 3" focus="false" listorder="3" taborder="3" active="true" database="15129843068917580124" server="6166986830366657121" database-name="employee" server-name="App-Services" mode="xquery" optimize="1">(:3.Get Employee Id , Name , Salary, and date of joining is greater than 2010-07-21:)


xquery version "1.0-ml";
for $employee in collection("employee")/employee
where $employee/joiningdttm ge "2010-07-21"
return&lt;employee&gt;{$employee/empId,$employee/name,$employee/salary,$employee/joiningdttm}&lt;/employee&gt;</query><query name="Query 4" focus="false" listorder="4" taborder="4" active="true" database="15129843068917580124" server="6166986830366657121" database-name="employee" server-name="App-Services" mode="xquery" optimize="1">(:4.Get Employee whose Salary is Greater than 15000 in below format with tax 10%:)


xquery version "1.0-ml";
&lt;result&gt;{
for $employee in collection("employee")/employee
where $employee/salary gt "15000" 
return&lt;object&gt;
{$employee/empId,$employee/name,$employee/salary}
&lt;tax&gt;{$employee/salary div 100 * 10}&lt;/tax&gt;
&lt;/object&gt;
}&lt;/result&gt;</query><query name="Query 5" focus="false" listorder="5" taborder="5" active="true" database="15129843068917580124" server="6166986830366657121" database-name="employee" server-name="App-Services" mode="xquery" optimize="1">(:5.Get all employees who are in Ops department but not in Service Department:)


xquery version "1.0-ml";
for $employee in collection("employee")/employee
where $employee/department[1] eq "Ops" and $employee/department[2] ne "Service"
return $employee</query><query name="Query 6" focus="false" listorder="6" taborder="6" active="true" database="15129843068917580124" server="6166986830366657121" database-name="employee" server-name="App-Services" mode="xquery" optimize="1">(:6.Retrieve all the employees whose age is greater than 27 years:)


xquery version "1.0-ml";
for $employee in collection("employee")/employee
let $age := xs:integer(fn:days-from-duration(fn:current-date() - xs:date($employee/dob/text())) div 365.25)
where $age gt xs:integer("27")
return $employee</query><query name="Query 7" focus="false" listorder="7" taborder="7" active="true" database="15129843068917580124" server="6166986830366657121" database-name="employee" server-name="App-Services" mode="xquery" optimize="1">(:7.Retrieve all the employees who are born in November or December in below format:)


xquery version "1.0-ml";
&lt;result&gt;{
for $employee in collection("employee")/employee
let $date := xdmp:month-name-from-date(xs:date($employee/dob))
where $date eq "December" or $date eq "November"
return &lt;object&gt;
{$employee/empId,$employee/name}
&lt;bornMonth&gt;{$date}&lt;/bornMonth&gt;
&lt;/object&gt;
}&lt;/result&gt;</query><query name="Query 8" focus="false" listorder="8" taborder="8" active="true" database="15129843068917580124" server="6166986830366657121" database-name="employee" server-name="App-Services" mode="xquery" optimize="1">(:8.Retrieve All employees from Ops Department[1] and group by Department[2]:)


xquery version "1.0-ml";
&lt;result&gt;{
for $dep in distinct-values(collection("employee")/employee/department[2])
let $employee := collection("employee")/employee
return  &lt;object&gt; 
&lt;department&gt;{$dep}&lt;/department&gt;
   {
     for $i in $employee
     where $i/department[1] eq "Ops" and $i/department[2] eq $dep
     order by $i
     return $i
   }
  &lt;/object&gt;
  }
  &lt;/result&gt;</query><query name="Query 9" focus="true" listorder="9" taborder="9" active="true" database="15129843068917580124" server="6166986830366657121" database-name="employee" server-name="App-Services" mode="xquery" optimize="1">(:9.	Write a Function which return Interval For given input start datetime, end datetime and interval duration.:)


xquery version "1.0-ml";

</query></workspace></export>
